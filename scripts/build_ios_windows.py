#!/usr/bin/env python3
"""
Script build iOS tr√™n Windows (s·ª≠ d·ª•ng cloud services)
"""

import subprocess
import os
import json
import requests
from pathlib import Path

def check_windows_environment():
    """Ki·ªÉm tra m√¥i tr∆∞·ªùng Windows"""
    print("üîç Ki·ªÉm tra m√¥i tr∆∞·ªùng Windows...")
    
    if os.name != 'nt':
        print("‚ùå Kh√¥ng ph·∫£i Windows")
        return False
    
    # Ki·ªÉm tra Flutter
    try:
        result = subprocess.run(['flutter', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Flutter ƒë√£ c√†i ƒë·∫∑t")
        else:
            print("‚ùå Flutter ch∆∞a c√†i ƒë·∫∑t")
            return False
    except FileNotFoundError:
        print("‚ùå Flutter ch∆∞a c√†i ƒë·∫∑t")
        return False
    
    return True

def prepare_ios_build():
    """Chu·∫©n b·ªã build iOS"""
    print("\nüîß Chu·∫©n b·ªã build iOS...")
    
    # T·∫°o iOS framework
    try:
        result = subprocess.run([
            'flutter', 'build', 'ios-framework',
            '--output=build/ios-framework'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ iOS framework ƒë√£ t·∫°o")
            return True
        else:
            print("‚ùå L·ªói t·∫°o iOS framework")
            print(f"L·ªói: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        return False

def create_codemagic_config():
    """T·∫°o file c·∫•u h√¨nh Codemagic"""
    print("\nüìù T·∫°o c·∫•u h√¨nh Codemagic...")
    
    codemagic_config = {
        "workflows": {
            "ios-workflow": {
                "name": "iOS Workflow",
                "environment": {
                    "xcode": "latest",
                    "cocoapods": "default",
                    "flutter": "stable"
                },
                "scripts": [
                    {
                        "name": "Build iOS",
                        "script": """
                        flutter pub get
                        flutter build ios --release
                        xcodebuild -workspace ios/Runner.xcworkspace \\
                          -scheme Runner \\
                          -configuration Release \\
                          -archivePath build/ios/Runner.xcarchive \\
                          archive
                        xcodebuild -exportArchive \\
                          -archivePath build/ios/Runner.xcarchive \\
                          -exportPath build/ios/ \\
                          -exportOptionsPlist ios/ExportOptions.plist
                        """
                    }
                ],
                "artifacts": [
                    "build/ios/Runner.ipa",
                    "build/ios/Runner.xcarchive"
                ]
            }
        }
    }
    
    try:
        with open('codemagic.yaml', 'w') as f:
            import yaml
            yaml.dump(codemagic_config, f, default_flow_style=False)
        print("‚úÖ codemagic.yaml ƒë√£ t·∫°o")
        return True
    except Exception as e:
        print(f"‚ùå L·ªói t·∫°o codemagic.yaml: {e}")
        return False

def create_github_actions():
    """T·∫°o GitHub Actions workflow"""
    print("\nüìù T·∫°o GitHub Actions workflow...")
    
    workflow_content = """name: iOS Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.8.1'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build iOS
        run: |
          flutter build ios --release
          xcodebuild -workspace ios/Runner.xcworkspace \\
            -scheme Runner \\
            -configuration Release \\
            -archivePath build/ios/Runner.xcarchive \\
            archive
            
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \\
            -archivePath build/ios/Runner.xcarchive \\
            -exportPath build/ios/ \\
            -exportOptionsPlist ios/ExportOptions.plist
            
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: build/ios/Runner.ipa
"""
    
    # T·∫°o th∆∞ m·ª•c .github/workflows
    workflows_dir = Path('.github/workflows')
    workflows_dir.mkdir(parents=True, exist_ok=True)
    
    try:
        with open('.github/workflows/ios.yml', 'w') as f:
            f.write(workflow_content)
        print("‚úÖ GitHub Actions workflow ƒë√£ t·∫°o")
        return True
    except Exception as e:
        print(f"‚ùå L·ªói t·∫°o GitHub Actions: {e}")
        return False

def show_cloud_options():
    """Hi·ªÉn th·ªã c√°c t√πy ch·ªçn cloud"""
    print("\n‚òÅÔ∏è  C√ÅC T√ôY CH·ªåN CLOUD BUILD:")
    print("=" * 50)
    
    print("\n1. üöÄ Codemagic CI/CD:")
    print("   - T√≠ch h·ª£p v·ªõi GitHub/GitLab")
    print("   - Build t·ª± ƒë·ªông khi push code")
    print("   - H·ªó tr·ª£ c·∫£ Android v√† iOS")
    print("   - Gi√°: $0.02/ph√∫t build")
    print("   - Link: https://codemagic.io")
    
    print("\n2. üêô GitHub Actions:")
    print("   - Mi·ªÖn ph√≠ cho public repos")
    print("   - 2000 ph√∫t/th√°ng cho private repos")
    print("   - T√≠ch h·ª£p v·ªõi GitHub")
    print("   - Link: https://github.com/features/actions")
    
    print("\n3. üî• Firebase App Distribution:")
    print("   - T√≠ch h·ª£p v·ªõi Firebase Console")
    print("   - H·ªó tr·ª£ c·∫£ Android v√† iOS")
    print("   - Mi·ªÖn ph√≠ cho 100 testers")
    print("   - Link: https://firebase.google.com/docs/app-distribution")
    
    print("\n4. üíª MacStadium:")
    print("   - Thu√™ Mac cloud")
    print("   - $0.50/gi·ªù cho Mac mini")
    print("   - Full Xcode support")
    print("   - Link: https://www.macstadium.com")
    
    print("\n5. ‚òÅÔ∏è  MacinCloud:")
    print("   - Remote Mac access")
    print("   - T·ª´ $1/gi·ªù")
    print("   - Dedicated Mac servers")
    print("   - Link: https://www.macincloud.com")

def main():
    """H√†m ch√≠nh"""
    print("üñ•Ô∏è  BUILD IOS TR√äN WINDOWS")
    print("=" * 50)
    
    # Ki·ªÉm tra m√¥i tr∆∞·ªùng
    if not check_windows_environment():
        print("\n‚ùå M√¥i tr∆∞·ªùng Windows ch∆∞a s·∫µn s√†ng!")
        return
    
    print("\n‚úÖ M√¥i tr∆∞·ªùng Windows ƒë√£ s·∫µn s√†ng!")
    
    # Chu·∫©n b·ªã build
    if prepare_ios_build():
        print("\n‚úÖ ƒê√£ chu·∫©n b·ªã iOS framework!")
    
    # T·∫°o c·∫•u h√¨nh cloud
    create_codemagic_config()
    create_github_actions()
    
    # Hi·ªÉn th·ªã t√πy ch·ªçn
    show_cloud_options()
    
    print("\nüìã H∆Ø·ªöNG D·∫™N TI·∫æP THEO:")
    print("1. Ch·ªçn m·ªôt cloud service t·ª´ danh s√°ch tr√™n")
    print("2. ƒêƒÉng k√Ω v√† k·∫øt n·ªëi v·ªõi repository")
    print("3. Push code l√™n GitHub/GitLab")
    print("4. Cloud service s·∫Ω t·ª± ƒë·ªông build iOS")
    print("5. T·∫£i IPA file t·ª´ cloud service")
    
    print("\n‚ö†Ô∏è  L∆ØU √ù:")
    print("- C·∫ßn Apple Developer Account ƒë·ªÉ upload TestFlight")
    print("- C·∫ßn c·∫•u h√¨nh Firebase iOS tr∆∞·ªõc")
    print("- Test k·ªπ tr∆∞·ªõc khi release")

if __name__ == "__main__":
    main() 